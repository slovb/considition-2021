import itertools
import random

from runner import get_runner
from solver.config import Config
from simple_searcher import SimpleSearcher


def main() -> None:
    '''
    config = Config(
        LOG_RESIZE=False,
        LOG_PLACED=False,
        ENABLE_LIMIT_NUM_CANDIDATES=False,
        PREFERRED_NUM_CANDIDATES=150,
        
        ENABLE_OPTIMAL_DISTANCE=False,
        MUL_OPTIMAL_X=1.0,
        MUL_OPTIMAL_Y=1.0,
        MUL_OPTIMAL_Z=1.0,
        
        ENABLE_HEAVY_PRIORITY=True,
        PENALTY_NOT_HEAVY=42.15992028364802,
        
        ENABLE_WEIGHT=True,
        PENALTY_HEAVY_ON_LIGHT=45.927,
        PENALTY_HEAVY_ON_MEDIUM=11.1537,
        PENALTY_HEAVY_ON_HEAVY=0,
        MUL_WEIGHT=91247.98325374069,
        
        ENABLE_SIDE_ALIGN=True,
        MUL_SIDE_ALIGN=1.1261022213600007,
        
        ENABLE_X=True,
        MUL_X=6.985596880664332,
        EXP_X=1.9800000000000002,
        
        ENABLE_BOUNDING=True,
        PENALTY_BOUNDING_BREAK=88329.8219153818,
        MUL_BOUNDING=1.9355876185387513,
        EXP_BOUNDING=1.0,
        
        ENABLE_ORDER_SKIP=True,
        ORDER_BASE_REDUCTION=250,
        ORDER_BASE=20.287098,
        EXP_ORDER_N=2,
        MUL_ORDER_SKIP=1.6279713592284457,
        EXP_ORDER_SKIP=2.4200000000000004,
        
        ENABLE_ORDER_BREAK=True,
        MUL_ORDER_BREAK=4071.724053298622,
        
        ENABLE_BOUNDED_X=True,
        MUL_BOUNDED_X=178120.88369971208,
    )
    '''
    '''
    config = Config(
        RANDOMIZE=False, LOG_RESIZE=False, LOG_PLACED=False, ENABLE_LIMIT_NUM_CANDIDATES=False, PREFERRED_NUM_CANDIDATES=150, ENABLE_OPTIMAL_DISTANCE=False, MUL_OPTIMAL_X=1.0, MUL_OPTIMAL_Y=1.0, MUL_OPTIMAL_Z=1.0, ENABLE_HEAVY_PRIORITY=True, PENALTY_NOT_HEAVY=42.15992028364802, ENABLE_WEIGHT=True, PENALTY_HEAVY_ON_LIGHT=45.927, PENALTY_HEAVY_ON_MEDIUM=11.1537, PENALTY_HEAVY_ON_HEAVY=0, MUL_WEIGHT=91247.98325374069, ENABLE_SIDE_ALIGN=True, MUL_SIDE_ALIGN=1.1261022213600007, ENABLE_X=True, MUL_X=6.985596880664332, EXP_X=1.9800000000000002, ENABLE_BOUNDING=True, PENALTY_BOUNDING_BREAK=88329.8219153818,
        # MUL_BOUNDING=1.9355876185387513,
        ENABLE_VOLUME=True, MUL_VOLUME=1.9355876185387513,        
        EXP_BOUNDING=1.0, ENABLE_ORDER_SKIP=True,
        # ORDER_BASE_REDUCTION=65.53600000000002,
        ORDER_BASE=20.287098,
        # EXP_ORDER_N=2, MUL_ORDER_SKIP=4.861096431114389, 
        EXP_ORDER_SKIP=2.4200000000000004, ENABLE_ORDER_BREAK=True, MUL_ORDER_BREAK=4886.068863958346, ENABLE_BOUNDED_X=True, MUL_BOUNDED_X=178120.88369971208,
        MUL_ORDER_SKIP = 4.861096431114389, EXP_ORDER_N = 1.0240000000000002,
        ORDER_BASE_REDUCTION = 17.179869184000008, MUL_BOUNDING = 1.548470094831001
    )
    '''
    # config = Config(RANDOMIZE=False, LOG_RESIZE=False, LOG_PLACED=False, ENABLE_LIMIT_NUM_CANDIDATES=False, PREFERRED_NUM_CANDIDATES=150, ENABLE_OPTIMAL_DISTANCE=False, MUL_OPTIMAL_X=1.0, MUL_OPTIMAL_Y=1.0, MUL_OPTIMAL_Z=1.0, ENABLE_HEAVY_PRIORITY=True, PENALTY_NOT_HEAVY=42.15992028364802, ENABLE_WEIGHT=True, PENALTY_HEAVY_ON_LIGHT=45.927, PENALTY_HEAVY_ON_MEDIUM=11.1537, PENALTY_HEAVY_ON_HEAVY=0, MUL_WEIGHT=91247.98325374069, ENABLE_SIDE_ALIGN=True, MUL_SIDE_ALIGN=1.1261022213600007, ENABLE_X=True, MUL_X=6.985596880664332, EXP_X=1.9800000000000002, ENABLE_BOUNDING=True, PENALTY_BOUNDING_BREAK=88329.8219153818, MUL_BOUNDING=1.548470094831001, EXP_BOUNDING=1.0, ENABLE_VOLUME=True, MUL_VOLUME=1.9355876185387513, ENABLE_ORDER_SKIP=True, ORDER_BASE_REDUCTION=17.179869184000008, ORDER_BASE=20.287098, EXP_ORDER_N=1.0240000000000002, MUL_ORDER_SKIP=4.861096431114389, EXP_ORDER_SKIP=2.4200000000000004, ENABLE_ORDER_BREAK=True, MUL_ORDER_BREAK=4886.068863958346, ENABLE_BOUNDED_X=True, MUL_BOUNDED_X=178120.88369971208)
    # config = Config(RANDOMIZE=False, LOG_RESIZE=False, LOG_PLACED=False, ENABLE_LIMIT_NUM_CANDIDATES=False, PREFERRED_NUM_CANDIDATES=150, ENABLE_OPTIMAL_DISTANCE=False, MUL_OPTIMAL_X=1.0, MUL_OPTIMAL_Y=1.0, MUL_OPTIMAL_Z=1.0, ENABLE_HEAVY_PRIORITY=True, PENALTY_NOT_HEAVY=42.15992028364802, ENABLE_WEIGHT=True, PENALTY_HEAVY_ON_LIGHT=45.927, PENALTY_HEAVY_ON_MEDIUM=11.1537, PENALTY_HEAVY_ON_HEAVY=0, MUL_WEIGHT=91247.98325374069, ENABLE_SIDE_ALIGN=True, MUL_SIDE_ALIGN=1.1261022213600007, ENABLE_X=True, MUL_X=6.985596880664332, EXP_X=1.9800000000000002, ENABLE_BOUNDING=True, PENALTY_BOUNDING_BREAK=88329.8219153818, MUL_BOUNDING=1.548470094831001, EXP_BOUNDING=1.0, ENABLE_VOLUME=True, MUL_VOLUME=1.9355876185387513, ENABLE_ORDER_SKIP=True, ORDER_BASE=20.287098, EXP_ORDER_N=1.0240000000000002, MUL_ORDER_SKIP=4.861096431114389, EXP_ORDER_SKIP=2.4200000000000004, ENABLE_ORDER_BREAK=True, MUL_ORDER_BREAK=36229.58986764314, ENABLE_BOUNDED_X=True, MUL_BOUNDED_X=178120.88369971208)
    
    # map2 only
    # config = Config(RANDOMIZE=False, LOG_RESIZE=False, LOG_PLACED=False, ENABLE_LIMIT_NUM_CANDIDATES=False, PREFERRED_NUM_CANDIDATES=150, ENABLE_OPTIMAL_DISTANCE=False, MUL_OPTIMAL_X=1.0, MUL_OPTIMAL_Y=1.0, MUL_OPTIMAL_Z=1.0, ENABLE_HEAVY_PRIORITY=True, PENALTY_NOT_HEAVY=348.4290932532894, ENABLE_WEIGHT=True, PENALTY_HEAVY_ON_LIGHT=45.927, PENALTY_HEAVY_ON_MEDIUM=11.1537, PENALTY_HEAVY_ON_HEAVY=0, MUL_WEIGHT=10174.243499599062, ENABLE_SIDE_ALIGN=True, MUL_SIDE_ALIGN=500.4898761600004, ENABLE_X=True, MUL_X=6.985596880664332, EXP_X=1.9800000000000002, ENABLE_BOUNDING=True, PENALTY_BOUNDING_BREAK=88329.8219153818, MUL_BOUNDING=1.0576259100000003, EXP_BOUNDING=1.0, ENABLE_VOLUME=True, MUL_VOLUME=1.9355876185387513, ENABLE_ORDER_SKIP=True, ORDER_BASE=9.016488, EXP_ORDER_N=1.0240000000000002, MUL_ORDER_SKIP=3.2407309540762594, EXP_ORDER_SKIP=2.4200000000000004, ENABLE_ORDER_BREAK=True, MUL_ORDER_BREAK=36229.58986764314, ENABLE_BOUNDED_X=True, MUL_BOUNDED_X=31985.792808029102)
    # config = Config(RANDOMIZE=False, LOG_RESIZE=False, LOG_PLACED=False, ENABLE_LIMIT_NUM_CANDIDATES=False, PREFERRED_NUM_CANDIDATES=150, ENABLE_OPTIMAL_DISTANCE=False, MUL_OPTIMAL_X=1.0, MUL_OPTIMAL_Y=1.0, MUL_OPTIMAL_Z=1.0, ENABLE_HEAVY_PRIORITY=True, PENALTY_NOT_HEAVY=348.4290932532894, ENABLE_WEIGHT=True, PENALTY_HEAVY_ON_LIGHT=45.927, PENALTY_HEAVY_ON_MEDIUM=11.1537, PENALTY_HEAVY_ON_HEAVY=0, MUL_WEIGHT=3014.5906665478706, ENABLE_SIDE_ALIGN=True, MUL_SIDE_ALIGN=500.4898761600004, ENABLE_X=True, MUL_X=6.985596880664332, EXP_X=1.9800000000000002, ENABLE_BOUNDING=True, PENALTY_BOUNDING_BREAK=88329.8219153818, MUL_BOUNDING=1.0576259100000003, EXP_BOUNDING=1.0, ENABLE_VOLUME=True, MUL_VOLUME=1.9355876185387513, ENABLE_ORDER_SKIP=True, ORDER_BASE=5.464538181818182, EXP_ORDER_N=1.0240000000000002, MUL_ORDER_SKIP=4.861096431114389, EXP_ORDER_SKIP=2.4200000000000004, ENABLE_ORDER_BREAK=True, MUL_ORDER_BREAK=36229.58986764314, ENABLE_BOUNDED_X=True, MUL_BOUNDED_X=31985.792808029102)
    
    config = Config(
        RANDOMIZE=False, 
        LOG_RESIZE=False, 
        LOG_PLACED=False, 
        ENABLE_LIMIT_NUM_CANDIDATES=False, 
        PREFERRED_NUM_CANDIDATES=150, 
        
        ENABLE_OPTIMAL_DISTANCE=False, MUL_OPTIMAL_X=1.0, MUL_OPTIMAL_Y=1.0, MUL_OPTIMAL_Z=1.0, 
        ENABLE_HEAVY_PRIORITY=True, PENALTY_NOT_HEAVY=42.15992028364802, 
        ENABLE_WEIGHT=True, PENALTY_HEAVY_ON_LIGHT=45.927, PENALTY_HEAVY_ON_MEDIUM=11.1537, PENALTY_HEAVY_ON_HEAVY=0, 
        MUL_WEIGHT=51507.10771672026, 
        
        ENABLE_SIDE_ALIGN=True, MUL_SIDE_ALIGN=1.1261022213600007, 
        ENABLE_X=True, MUL_X=6.985596880664332, EXP_X=1.9800000000000002, 
        ENABLE_BOUNDING=True, PENALTY_BOUNDING_BREAK=88329.8219153818, MUL_BOUNDING=1.548470094831001, EXP_BOUNDING=1.0, 
        ENABLE_VOLUME=True, MUL_VOLUME=1.9355876185387513, 
        # MUL_VOLUME=-1.9355876185387513*10**3, 
        ENABLE_ORDER_SKIP=True, ORDER_BASE=20.287098, EXP_ORDER_N=1.0240000000000002, MUL_ORDER_SKIP=3.320194270278251, EXP_ORDER_SKIP=2.4200000000000004, 
        ENABLE_ORDER_BREAK=True, MUL_ORDER_BREAK=27219.82709815412, 
        ENABLE_BOUNDED_X=True, MUL_BOUNDED_X=133824.85627326224
    )
    
    # maps = ['training2', 'training1']
    maps = ['christmas']
    searchspace = list(itertools.combinations([
        'MUL_ORDER_SKIP',
        'MUL_ORDER_BREAK',
        'MUL_WEIGHT',
        'ORDER_BASE',
        'MUL_VOLUME',
        'MUL_BOUNDED_X',
        'MUL_BOUNDING',
        # 'PENALTY_NOT_HEAVY',

        # 'ORDER_BASE_REDUCTION',
        # 'EXP_ORDER_SKIP',
        # 'EXP_ORDER_N',
        # 'EXP_BOUNDING',
        # 'MUL_SIDE_ALIGN',
    ], 1))
    runner = get_runner(maps)
    score = runner(config)
    print('baseline: {}'.format(score))
    for step in [1.3, 1.1, 1.05]:
        print('=' * 20 + ' {:.2f} '.format(step) + '=' * 20)
        for i, attrs in enumerate(random.sample(searchspace, len(searchspace))):
            searcher = SimpleSearcher(runner)
            settings = [(name, getattr(config, name), step) for name in attrs]
            cop, s = searcher.search(config, settings, baseline=score)
            if s > score:
                score = s
                print('best ({}) from {}'.format(score, cop.name))
            else:
                print('no improvement from {}'.format(cop.name))
            print('_' * 20 + ' {}/{} '.format(i + 1, len(searchspace)) + '_' * 20)
            print('')
            config = cop.action(config) # just in case the attribute got decreased
        print(config)


if __name__ == "__main__":
    main()
